generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model messages {
  id                                Int       @id @default(autoincrement())
  sender_id                         Int?
  receiver_id                       Int?
  sender_name                       String    @db.VarChar(120)
  sender_phone_number               String    @db.VarChar(50)
  pet_name                          String    @db.VarChar(100)
  message                           String
  created                           DateTime? @default(now()) @db.Timestamptz(6)
  users_messages_receiver_idTousers users?    @relation("messages_receiver_idTousers", fields: [receiver_id], references: [id], onUpdate: NoAction)
  users_messages_sender_idTousers   users?    @relation("messages_sender_idTousers", fields: [sender_id], references: [id], onUpdate: NoAction)
}

model pets {
  id          Int       @id @default(autoincrement())
  owner_id    Int?
  name        String    @db.VarChar(100)
  days_old    Int
  city        String    @db.VarChar(50)
  state       String    @db.VarChar(50)
  size        pet_size
  personality String?   @db.VarChar(100)
  photo_url   String?   @db.VarChar(255)
  available   Boolean   @default(true)
  created     DateTime? @default(now()) @db.Timestamptz(6)
  users       users?    @relation(fields: [owner_id], references: [id], onUpdate: NoAction)
}

model profiles {
  id        Int       @id @default(autoincrement())
  user_id   Int?
  photo_url String?   @db.VarChar(255)
  about     String?
  created   DateTime? @default(now()) @db.Timestamptz(6)
  users     users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id                                   Int        @id @default(autoincrement())
  name                                 String     @db.VarChar(120)
  email                                String     @db.VarChar(90)
  password                             String     @db.VarChar(255)
  role                                 user_role
  phone_number                         String?    @db.VarChar(50)
  city                                 String?    @db.VarChar(50)
  created                              DateTime?  @default(now()) @db.Timestamptz(6)
  messages_messages_receiver_idTousers messages[] @relation("messages_receiver_idTousers")
  messages_messages_sender_idTousers   messages[] @relation("messages_sender_idTousers")
  pets                                 pets[]
  profiles                             profiles[]
}

enum pet_size {
  small
  medium_small @map("medium/small")
  medium
  medium_large @map("medium/large")
  large
  very_big     @map("very big")
}

enum user_role {
  owner
  adopter
}
